package main.java.com.ryzhov_andrey.javacore.chapter_15;

interface MyNumber{     // функциональный интерфейс
    double getValue();
}

public class LambdaDemo_1 {
    public static void main(String[] args) {
        MyNumber myNum;  // объявляем ссылку на функциональный интерфейс

        // Здесь лямбда-выражение является просто константным выражением.
        // Когда оно присваивается ссылочной переменной myNum, получается
        // экземпляр класса, в котором лямбда-выражение реализует
        // метод getValue() из функционального интерфейса MyNumber
        myNum = () -> 123.45;
        System.out.println("Фиксированное значение: " + myNum.getValue());

        // более сложное выражение
        myNum = () -> Math.random()*100;

        // В следующих строках кода используется лямбда выражение из предыдущего кода
        System.out.println("Случайное значение: " + myNum.getValue());
        System.out.println("Еще одно случайное значение: " + myNum.getValue());

        // Лямбда-выражение должно быть совместимо с абстрактным методом,
        // определяемым в функциональном интерфейсе.
        // Поэтому следующая строка кода ошибочна:
        // myNum = () -> "123.03" // ОШИБКА!
    }
}
